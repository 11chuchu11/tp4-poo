@startuml

abstract class Data {
#id: int
+getID(): int
+setID(id: int):void
}

class Funcion extends Data{
-peliculaID: int
-horario: String
-fecha: LocalDateTime
-salaID: int
+getID (): int
+setID (id: int): void
+getPeliculaID():int
+getFecha(): LocalDateTime
+getHorario(): String
+getsalaID(): int
}

class CondicionesDescuento extends Data{
-fchDesde: LocalDateTime
-fchHasta: LocalDateTime
-diaSemana: DiaDeLaSemana
-porcentaje: float
-tipoTarjeta: TipoTarjeta
-tarjetasDescuento: List<TarjetaDescuento>
+condicionesDescuento(id: int, fchDesde: LocalDateTime, fchHasta: LocalDateTime, diaSemana: DiaDeLaSemana)
+getID (): int
+setID (id: int): void
+getPorcentaje(): float
+getFchDesde(): LocalDateTime
+getFchHasta(): LocalDateTime
+getDiaSemana(): DiaDeLaSemana
+getTipoTarjeta(): TipoTarjeta
+getTarjetasDescuentos(): List<TarjetaDescuento>
+setFchDesde(fchDesde: LocalDateTime):void
+setFchHasta(fchHasta: LocalDateTime):void
+setDiaSemana(diaSemana: DiaDeLaSemana):void
+setPorcentaje(porcentaje: float):void
+setTipoTarjeta(tipoTarjeta: TipoTarjeta):void
+setTarjetasDescuentos(tarjetasDescuento: List<TarjetaDescuento>):void
}

class TarjetaDescuento {
-tarjetaID: int
-numeroTarjeta: String
-tipoTarjeta: TipoTarjeta
+TarjetaDescuento(tarjetaID: int, tipoTarjeta: TipoTarjeta,  numeroTarjeta: String)
+getTipoTarjeta(): TipoTarjeta
}

class Combo extends Data {
-descuentoID: int
-descripcion: String
-precio: float
+combo (id: int, descripcion: String, precio: float, descuentoID: int)
+getID (): int
+setID (id: int): void
+getDescuentoID (): int
+getPrecio (): float
+getDescripcion (): String
}

class Venta extends Data{
-fchVenta: LocalDateTime
-comboIDs: List<Integer>
-funcionID: int
-tarjetaDescuento: TarjetaDescuento
+Venta(id: int, funcionID: int, tarjetaDescuento: TarjetaDescuento)
+getFuncionID(): int
+getComboIds(): List<Integer>
+getFchVenta(): LocalDateTime
+getTarjetaDescuento(): TarjetaDescuento
+getID (): int
+setID (id: int): void
}

class Pelicula extends Data{
-genero: TipoGenero
-nombrePelicula: String
-duracionEnMinutos: int
-director: String
-actores: List<String>
-tipo: TipoProyeccion
-condicionesDescuentoID: int

+Pelicula(id: int, genero: TipoGenero, director: String, duracionEnMinutos: int, nombrePelicula: String, tipo: TipoProyeccion, actores: List<String>, condicionesDescuentoID: int)
+getGenero(): TipoGenero
+setGenero(genero: TipoGenero): void
+getcondicionesDescuentoID(): int
+getNombrePelicula(): String
+getDuracionEnMinutos(): int
+getDirector(): String
+getActores(): List<String>
+getID (): int
+setID (id: int): void
}

class Sala extends Data{
-sucursalID: int
-denominacion: String
-asientos: int
-genero: TipoGenero
+Sala(id: int, sucursalID: int, asientos: int, denominacion: String, genero: TipoGenero)
+getSucursalID(): int
+getAsientos(): int
+getGenero() TipoGenero
+getDenominacion():String
+getID (): int
+setID (id: int): void
}

enum DiaDeLaSemana {
+lunes
+martes
+miercoles
+jueves
+viernes
+sabado
+domingo
}

enum TipoGenero {
+Drama
+Romance
+Terror
+Biografica
+Suspenso
}

enum TipoProyeccion {
+DosD
+TresD
+TresDMax
+CuatroD
}

enum TipoTarjeta {
+LaNacion
+Clarin365
+MovieClub
+PAMI
+UADE
}

class Entrada extends Data{
-precio: float
-nroAsiento: int
-funcionID: int
-ventaID: int
+Entrada (id: int, nroAsiento: int, funcionID: int, precio: float, ventaID: int)
+getID():int
+setID(id: int):void
+getPrecio(): float
+setPrecio(precio: float):void
+getFuncionID(): int
+getVentaID():int
+setFuncionID(funcionID: int):void
+setVentaID(ventaID: int):void
}

class Sucursal extends Data{
-denominacion: String
-direccion: String
+Sucursal (id: int, denominacion: String, direccion: String)
+getID():int
+setID(id: int):void
+getDenominacion(): String
+getDireccion(): String
}

class VentasController {
-INSTANCE: VentasController
-funcionController: FuncionController
-descuentoController: DescuentoController
-ventas: List<Venta>
-entradas: List<Entrada>
-combos: List<Combo>
-getID (List<Data>): int
-existeEntrada (entrada: Entrada): boolean
-existeCombo (combo: Combo): boolean
-calcularTotalPorVentaCombos (ventaDTO: VentaDTO): float
-calcularTotalPorVentaDeEntradas (ventaDTO: VentaDTO): float
-calcularTotalVenta (ventaDTO: VentaDTO): float
+precargarData (): void
+buscarVentaPorID (ventaID: int): ventaDTO
+buscarVentaPorFuncion (funcioID: int): VentaDTO
+buscarVentasPorGenero (genero: TipoGenero): List<VentaDTO>
+buscarEntradaPorID (entradaID: int): EntradaDTO
+buscarEntradasPorVenta (ventaID: int): List<EntradaDTO>
+buscarComboPorID (comboID: int): ComboDTO
+comboMasVendido (): ComboDTO
+recaudacionPorFuncion (funcionID: int): float
+recaudacionPorPelicula (peliculaID: int): float
+recaudacionPorTarjetaDescuento (tipoTarjeta: TipoTarjeta): float
-ventaToDTO (venta: Venta): VentaDTO
-entradaToDTO (entrada: Entrada): EntradaDTO
-comboToDTO (combo: Combo): ComboDTO
}

class FuncionController {
-INSTANCE: FuncionController
-funciones: List<Funcion>
-sucursalController: SucursalController
-peliculasController: PeliculasController
-ventasController: VentasController

+getFuncionID (): int
+existeFuncion (funcion: Funcion): boolean
-precargarFunciones (): void
+altaNuevaFuncion (funcionDTO: FuncionDTO): int
+buscarFuncionPorID (funcionID: int): FuncionDTO
+buscarFuncionesPorPelicula (peliculaID: int): List<FuncionDTO>
+buscarFuncionesPorGenero (genero: TipoGenero): List<FuncionDTO>
+buscarFuncionesPorFecha (fchFuncion: LocalDateTime): List<FuncionDTO>
+obtenerAsientosDisponiblesPorFuncion (funcionID: int): int
+funcionToDTO (funcion: Funcion): FuncionDTO
+dtoToFuncion (funcionDTO: FuncionDTO): Funcion
}

class SucursalController {
-INSTANCE: SucursalController
-sucursales: List <Sucursal>
-salas: List <Sala>
-getSucursalID(): int
-getSalaID(): int
-existeSucursal(): boolean
-existeSala(): boolean
-precargarData(): void
+altaNuevaSucursal (dto: SucursalDTO): int
+altaNuevaSala (dto: SalaDTO): int
+buscarSucursalPorID (sucursalID: int): SucursalDTO
+buscarSalasPorSucursalID (sucursalID: int): List<SalaDTO>
+buscarSalaPorID (salaID: int): SalaDTO
-sucuralToDTO (sucursal: Sucursal): SucursalDTO
-dtoToSucursal (dto: SucursalDTO): Sucursal
-salaToDTO (sala: Sala): SalaDTO
-dtoToSala (dto: SalaDTO): Sala
}

class DescuentoController {
-INSTANCE: DescuentoController
-descuento: List<CondicionesDescuento>
-precargarDescuentos():void
+getPorcentajeDescuentoPorTarjeta(tipoTarjeta: TipoTarjeta): float
+buscarDescuentoPorID (descuentoID: int): CondicionesDescuentoDTO
+buscarDescuentoPorDiaDeLaSemana(diaDeLaSemana: DiaDeLaSemana): List<CondicionesDescuentoDTO>
+getPorcentajeDescuento(descuentoID: int): float
-descuentoDTO (descuento: CondicionesDescuento): CondicionesDescuentoDTO
}

class PeliculasController {
-INSTANCE: PeliculasController
-peliculas: List<Pelicula>
-descuentoController: DescuentoController
-funcionDestroller: FuncionController
-ventasController: VentasController
+getPeliculaID (): int
+exitePelicula (): boolean
+precargarPelicula ():void
+altaNuevaPelicula (dto: PeliculaDTO): int
+buscarPeliculaPorID (peliculaID: int): PeliculaDTO
+buscarPeliculasPorGenero (genero: TipoGenero): List<PeliculaDTO>
+buscarPeliculasPorDescuentoID(): List<PeliculaDTO>
+buscarPeliculaMasVista(): PeliculaDTO
+buscarPeliculaConMasRecaudacion(): PeliculaDTO
+PeliculaToDTO(pelicula: Pelicula): PeliculaDTO
+dtoToPelicula(dto: PeliculaDTO): Pelicula
}

CondicionesDescuento -- TipoTarjeta
CondicionesDescuento o-- TarjetaDescuento : utiliza
CondicionesDescuento -- DiaDeLaSemana

TarjetaDescuento -- TipoTarjeta

Venta "0..*" o-- "1" TarjetaDescuento :  utiliza

Pelicula -- TipoGenero
Pelicula -- TipoProyeccion

Sala -- TipoGenero

FuncionController "1" *-- "0..*" Funcion : administra
FuncionController "1" -- "1"  SucursalController: consulta
FuncionController "1" -- "1"  PeliculasController : consulta

DescuentoController "1" *-- "0..*" CondicionesDescuento : administra

PeliculasController "1" *-- "0..*" Pelicula : administra
PeliculasController "1" -- "1" DescuentoController : consulta
PeliculasController "1" -- "1" VentasController : consulta

VentasController "1" *-- "0..*" Venta : Administra
VentasController "1" o-- "0..*" Entrada : vende
VentasController "1" o-- "0..*" Combo : Utiliza
VentasController "1" -- "1" FuncionController : consulta
VentasController "1" -- "1" DescuentoController : consulta

SucursalController "1" *-- "0..*" Sucursal : administra
SucursalController "1" *-- "0..*" Sala : administra

@enduml